zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 0b4d87047ee14edb98a87b309ee5a803
      name: 'HyperV VM'
    - uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
    - uuid: aea23489ce3a49b6806ebb28e0cda430
      name: Windows
  templates:
    - uuid: 553c9735a18645849c38ebda859ace9c
      template: 'Template Windows HyperV VM Guest 2025'
      name: 'Template Windows HyperV VM Guest 2025'
      description: 'Child template, to create new Hyper-V VM monitoring from the Template Windows HyperV Host 2025 template'
      groups:
        - name: 'HyperV VM'
        - name: Templates
        - name: Windows
      items:
        - uuid: 823f8e1df92a4276af7188394af21a38
          name: 'Hyper-V VM Counters Master Data'
          key: 'hyperv.vm.counters[{HOST.HOST}]'
          delay: 5m
          value_type: TEXT
          trends: '0'
          description: |
            Master item containing all counter discovery data for dependent items
            
            Needs to be passive agent, as the request must be processed by the Hyper-V server itself and not the VM
          timeout: 30s
      discovery_rules:
        - uuid: 9693f27950fe4ecf9aec95e6bd4f10d0
          name: 'Hyper-V VM CPU Discovery'
          type: DEPENDENT
          key: hyperv.vm.cpu.discovery
          delay: '0'
          description: 'Discovers CPU performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: 2ff9d70a0f41427e831760badda86ed8
              name: 'Hyper-V CPU Usage - {#VMNAME} - {#INSTANCE}'
              key: 'hyperv.vm.cpu.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}"]'
              value_type: FLOAT
              trends: '0'
              units: '%'
              description: 'CPU usage for virtual processor {#VMNAME} {#INSTANCE}'
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data[?(@["{#ITEM_TYPE}"]=="CPU")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
        - uuid: 21b202dcf4cf4be68e751963040ab4c1
          name: 'Hyper-V VM Disk Discovery'
          type: DEPENDENT
          key: hyperv.vm.disk.discovery
          delay: '0'
          description: 'Discovers Disk performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: 16ea378f7218481ba6435b61dedc617e
              name: 'Hyper-V Disk Usage - {#VMNAME} - {#DISK_SHORT} - {#METRIC}'
              key: 'hyperv.vm.disk.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}"]'
              value_type: FLOAT
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#DISK_SHORT}'
              path: '$["{#DISK_SHORT}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data[?(@["{#ITEM_TYPE}"]=="DISK")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
        - uuid: f3ca099ae3fd4925a77eaebb5d2eaf29
          name: 'Hyper-V VM NIC Discovery'
          type: DEPENDENT
          key: hyperv.vm.nic.discovery
          delay: '0'
          description: 'Discovers network performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: 3d83dfedd67e4f609f66c1e6666cd0b7
              name: 'Hyper-V NIC Usage - {#VMNAME} - {#NIC_SHORT} - {#METRIC}'
              key: 'hyperv.vm.nic.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}"]'
              value_type: FLOAT
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#NIC_SHORT}'
              path: '$["{#NIC_SHORT}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data[?(@["{#ITEM_TYPE}"]=="NIC")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
      tags:
        - tag: class
          value: software
        - tag: target
          value: hyperv
        - tag: target
          value: hyperv-client
