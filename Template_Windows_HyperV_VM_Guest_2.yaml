zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 0b4d87047ee14edb98a87b309ee5a803
      name: 'HyperV VM'
    - uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
    - uuid: aea23489ce3a49b6806ebb28e0cda430
      name: Windows
  templates:
    - uuid: 553c9735a18645849c38ebda859ace9c
      template: 'Template Windows HyperV VM Guest 2'
      name: 'Template Windows HyperV VM Guest 2'
      description: 'Child template, to create new Hyper-V VM monitoring from the "Template Windows HyperV Host 2" template'
      groups:
        - name: 'HyperV VM'
        - name: Templates
        - name: Windows
      items:
        - uuid: 60a505b652f24034b5b0d1903a85ea8e
          name: 'Hyper-V VM disk master data'
          key: 'hyperv.discover.disks[{#VMNAME_SAFE}]'
          delay: 5m
          value_type: TEXT
          trends: '0'
          description: |
            Master item containing all counter discovery data for dependent items
            
            Needs to be passive agent, as the request must be processed by the Hyper-V server itself and not the VM
          timeout: 30s
        - uuid: 823f8e1df92a4276af7188394af21a38
          name: 'Hyper-V VM counters master data'
          key: 'hyperv.vm.counters[{HOST.HOST}]'
          delay: 5m
          value_type: TEXT
          trends: '0'
          description: |
            Master item containing all counter discovery data for dependent items
            
            Needs to be passive agent, as the request must be processed by the Hyper-V server itself and not the VM
          timeout: 30s
      discovery_rules:
        - uuid: 7f9dcb476f0d42e29a5ec14f2de1482b
          name: 'Discover VM disks'
          type: DEPENDENT
          key: 'hyperv.disk.details[{#VMNAME_SAFE}]'
          delay: '0'
          item_prototypes:
            - uuid: a7a0b0c1b40b4957bf7bc078725ef3e7
              name: 'Disk usage {#DISK_FILENAME}'
              type: DEPENDENT
              key: 'hyperv.disk.usage[{#DISK_FILENAME}]'
              delay: '0'
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$["{#DISK_USAGE_PERCENT}"]'
              master_item:
                key: 'hyperv.diskusage[{#DISK_PATH}]'
            - uuid: 07676898d41b426b86eae937ee035684
              name: 'Disk data {#DISK_FILENAME}'
              key: 'hyperv.diskusage[{#DISK_PATH}]'
              delay: 5m
              value_type: TEXT
              trends: '0'
          master_item:
            key: 'hyperv.discover.disks[{#VMNAME_SAFE}]'
        - uuid: 9693f27950fe4ecf9aec95e6bd4f10d0
          name: 'Hyper-V VM CPU Discovery'
          type: DEPENDENT
          key: hyperv.vm.cpu.discovery
          delay: '0'
          description: 'Discovers CPU performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: a104f4165a5246eebfc4f5676149a661
              name: 'Hyper-V CPU Usage2 {#CPU.CORE}'
              type: DEPENDENT
              key: 'hyperv.cpu.usage2[{#VMNAME},*]'
              delay: '0'
              master_item:
                key: 'hyperv.vm.cpu.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}",*]'
            - uuid: 2ff9d70a0f41427e831760badda86ed8
              name: 'Hyper-V CPU Usage {#CPU.CORE}'
              key: 'hyperv.vm.cpu.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}",*]'
              value_type: FLOAT
              trends: '0'
              units: '%'
              description: |
                CPU usage for virtual processor {#VMNAME} {#INSTANCE}
                Core: {#CPU.CORE}
              timeout: 30s
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@["{#ITEM_TYPE}"]=="CPU")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
        - uuid: 21b202dcf4cf4be68e751963040ab4c1
          name: 'Hyper-V VM Disk Discovery'
          type: DEPENDENT
          key: hyperv.vm.disk.discovery
          delay: '0'
          description: 'Discovers Disk performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: 09a7f56ddaa94b98a9312c152aba3444
              name: 'Hyper-V Disk {#DISK_SHORT}'
              key: 'hyperv.diskusage["{#DISK_PATH}"]'
              delay: 5m
              value_type: TEXT
              trends: '0'
              description: |
                Disk for {#VMNAME} {#INSTANCE}
                Name: {#DISK_SHORT}
                Full path: {#DISK_PATH}
              timeout: 30s
            - uuid: 4a664d7053b7468e867479165f11d11e
              name: 'Hyper-V Disk {#DISK_SHORT} current size'
              type: DEPENDENT
              key: 'hyperv.disk[{#DISK_SHORT},current_size]'
              delay: '0'
              units: GB
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[CurrentSizeGB]'
              master_item:
                key: 'hyperv.diskusage["{#DISK_PATH}"]'
            - uuid: 26530c0b79894a4a9504e8a9e7f5529a
              name: 'Hyper-V Disk {#DISK_SHORT} max size'
              type: DEPENDENT
              key: 'hyperv.disk[{#DISK_SHORT},max_size]'
              delay: '0'
              units: GB
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[MaxSizeGB]'
              master_item:
                key: 'hyperv.diskusage["{#DISK_PATH}"]'
            - uuid: a6f855e66c884abea0e2170c8861ac84
              name: 'Hyper-V Disk {#DISK_SHORT} usage'
              type: DEPENDENT
              key: 'hyperv.disk[{#DISK_SHORT},usage]'
              delay: '0'
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[UsagePercent]'
              master_item:
                key: 'hyperv.diskusage["{#DISK_PATH}"]'
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#DISK_PATH}'
              path: '$["{#DISK_PATH}"]'
            - lld_macro: '{#DISK_SHORT}'
              path: '$["{#DISK_SHORT}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@["{#ITEM_TYPE}"]=="DISK")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
        - uuid: f3ca099ae3fd4925a77eaebb5d2eaf29
          name: 'Hyper-V VM NIC Discovery'
          type: DEPENDENT
          key: hyperv.vm.nic.discovery
          delay: '0'
          description: 'Discovers network performance counters for this Hyper-V VM'
          item_prototypes:
            - uuid: 3d83dfedd67e4f609f66c1e6666cd0b7
              name: 'Hyper-V NIC Usage {#NIC_SHORT} - {#METRIC}'
              key: 'hyperv.vm.nic.usage["{#VMNAME_SAFE}","{#COUNTER_PATH_LOCAL}"]'
              value_type: FLOAT
              description: |
                Network interface for {#VMNAME} {#INSTANCE}
                Name: {#NIC_SHORT}
                Type: {#NIC_TYPE}
              timeout: 30s
          master_item:
            key: 'hyperv.vm.counters[{HOST.HOST}]'
          lld_macro_paths:
            - lld_macro: '{#COUNTER_PATH_LOCAL}'
              path: '$["{#COUNTER_PATH_LOCAL}"]'
            - lld_macro: '{#COUNTER_PATH}'
              path: '$["{#COUNTER_PATH}"]'
            - lld_macro: '{#INSTANCE}'
              path: '$["{#INSTANCE}"]'
            - lld_macro: '{#ITEM_TYPE}'
              path: '$["{#ITEM_TYPE}"]'
            - lld_macro: '{#METRIC}'
              path: '$["{#METRIC}"]'
            - lld_macro: '{#NIC_SHORT}'
              path: '$["{#NIC_SHORT}"]'
            - lld_macro: '{#VMNAME_SAFE}'
              path: '$["{#VMNAME_SAFE}"]'
            - lld_macro: '{#VMNAME}'
              path: '$["{#VMNAME}"]'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@["{#ITEM_TYPE}"]=="NIC")]'
            - type: JAVASCRIPT
              parameters:
                - |
                  // Fix double backslash escaping in COUNTER_PATH_LOCAL
                  var data = JSON.parse(value);
                  for (var i = 0; i < data.length; i++) {
                    if (data[i]["{#COUNTER_PATH_LOCAL}"]) {
                      data[i]["{#COUNTER_PATH_LOCAL}"] = data[i]["{#COUNTER_PATH_LOCAL}"].replace(/\\\\/g, "\\");
                    }
                  }
                  return JSON.stringify(data);
      tags:
        - tag: class
          value: software
        - tag: target
          value: hyperv
        - tag: target
          value: hyperv-client
